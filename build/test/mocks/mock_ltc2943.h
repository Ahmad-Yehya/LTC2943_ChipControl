/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LTC2943_H
#define _MOCK_LTC2943_H

#include "unity.h"
#include "ltc2943.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ltc2943_Init(void);
void mock_ltc2943_Destroy(void);
void mock_ltc2943_Verify(void);




#define LTC2943_Initialise_IgnoreAndReturn(cmock_retval) LTC2943_Initialise_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LTC2943_Initialise_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define LTC2943_Initialise_StopIgnore() LTC2943_Initialise_CMockStopIgnore()
void LTC2943_Initialise_CMockStopIgnore(void);
#define LTC2943_Initialise_ExpectAndReturn(cmock_retval) LTC2943_Initialise_CMockExpectAndReturn(__LINE__, cmock_retval)
void LTC2943_Initialise_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
typedef _Bool (* CMOCK_LTC2943_Initialise_CALLBACK)(int cmock_num_calls);
void LTC2943_Initialise_AddCallback(CMOCK_LTC2943_Initialise_CALLBACK Callback);
void LTC2943_Initialise_Stub(CMOCK_LTC2943_Initialise_CALLBACK Callback);
#define LTC2943_Initialise_StubWithCallback LTC2943_Initialise_Stub
#define LTC2943_Read_IgnoreAndReturn(cmock_retval) LTC2943_Read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LTC2943_Read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define LTC2943_Read_StopIgnore() LTC2943_Read_CMockStopIgnore()
void LTC2943_Read_CMockStopIgnore(void);
#define LTC2943_Read_ExpectAndReturn(address, dest, dataSize, cmock_retval) LTC2943_Read_CMockExpectAndReturn(__LINE__, address, dest, dataSize, cmock_retval)
void LTC2943_Read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t address, uint8_t* dest, uint8_t dataSize, _Bool cmock_to_return);
typedef _Bool (* CMOCK_LTC2943_Read_CALLBACK)(uint8_t address, uint8_t* dest, uint8_t dataSize, int cmock_num_calls);
void LTC2943_Read_AddCallback(CMOCK_LTC2943_Read_CALLBACK Callback);
void LTC2943_Read_Stub(CMOCK_LTC2943_Read_CALLBACK Callback);
#define LTC2943_Read_StubWithCallback LTC2943_Read_Stub
#define LTC2943_Read_ExpectWithArrayAndReturn(address, dest, dest_Depth, dataSize, cmock_retval) LTC2943_Read_CMockExpectWithArrayAndReturn(__LINE__, address, dest, dest_Depth, dataSize, cmock_retval)
void LTC2943_Read_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t address, uint8_t* dest, int dest_Depth, uint8_t dataSize, _Bool cmock_to_return);
#define LTC2943_Read_ReturnThruPtr_dest(dest) LTC2943_Read_CMockReturnMemThruPtr_dest(__LINE__, dest, sizeof(uint8_t))
#define LTC2943_Read_ReturnArrayThruPtr_dest(dest, cmock_len) LTC2943_Read_CMockReturnMemThruPtr_dest(__LINE__, dest, cmock_len * sizeof(*dest))
#define LTC2943_Read_ReturnMemThruPtr_dest(dest, cmock_size) LTC2943_Read_CMockReturnMemThruPtr_dest(__LINE__, dest, cmock_size)
void LTC2943_Read_CMockReturnMemThruPtr_dest(UNITY_LINE_TYPE cmock_line, uint8_t* dest, size_t cmock_size);
#define LTC2943_Read_IgnoreArg_address() LTC2943_Read_CMockIgnoreArg_address(__LINE__)
void LTC2943_Read_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define LTC2943_Read_IgnoreArg_dest() LTC2943_Read_CMockIgnoreArg_dest(__LINE__)
void LTC2943_Read_CMockIgnoreArg_dest(UNITY_LINE_TYPE cmock_line);
#define LTC2943_Read_IgnoreArg_dataSize() LTC2943_Read_CMockIgnoreArg_dataSize(__LINE__)
void LTC2943_Read_CMockIgnoreArg_dataSize(UNITY_LINE_TYPE cmock_line);
#define LTC2943_Write_IgnoreAndReturn(cmock_retval) LTC2943_Write_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LTC2943_Write_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define LTC2943_Write_StopIgnore() LTC2943_Write_CMockStopIgnore()
void LTC2943_Write_CMockStopIgnore(void);
#define LTC2943_Write_ExpectAndReturn(address, src, dataSize, cmock_retval) LTC2943_Write_CMockExpectAndReturn(__LINE__, address, src, dataSize, cmock_retval)
void LTC2943_Write_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t address, uint8_t* src, uint8_t dataSize, _Bool cmock_to_return);
typedef _Bool (* CMOCK_LTC2943_Write_CALLBACK)(uint8_t address, uint8_t* src, uint8_t dataSize, int cmock_num_calls);
void LTC2943_Write_AddCallback(CMOCK_LTC2943_Write_CALLBACK Callback);
void LTC2943_Write_Stub(CMOCK_LTC2943_Write_CALLBACK Callback);
#define LTC2943_Write_StubWithCallback LTC2943_Write_Stub
#define LTC2943_Write_ExpectWithArrayAndReturn(address, src, src_Depth, dataSize, cmock_retval) LTC2943_Write_CMockExpectWithArrayAndReturn(__LINE__, address, src, src_Depth, dataSize, cmock_retval)
void LTC2943_Write_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t address, uint8_t* src, int src_Depth, uint8_t dataSize, _Bool cmock_to_return);
#define LTC2943_Write_ReturnThruPtr_src(src) LTC2943_Write_CMockReturnMemThruPtr_src(__LINE__, src, sizeof(uint8_t))
#define LTC2943_Write_ReturnArrayThruPtr_src(src, cmock_len) LTC2943_Write_CMockReturnMemThruPtr_src(__LINE__, src, cmock_len * sizeof(*src))
#define LTC2943_Write_ReturnMemThruPtr_src(src, cmock_size) LTC2943_Write_CMockReturnMemThruPtr_src(__LINE__, src, cmock_size)
void LTC2943_Write_CMockReturnMemThruPtr_src(UNITY_LINE_TYPE cmock_line, uint8_t* src, size_t cmock_size);
#define LTC2943_Write_IgnoreArg_address() LTC2943_Write_CMockIgnoreArg_address(__LINE__)
void LTC2943_Write_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define LTC2943_Write_IgnoreArg_src() LTC2943_Write_CMockIgnoreArg_src(__LINE__)
void LTC2943_Write_CMockIgnoreArg_src(UNITY_LINE_TYPE cmock_line);
#define LTC2943_Write_IgnoreArg_dataSize() LTC2943_Write_CMockIgnoreArg_dataSize(__LINE__)
void LTC2943_Write_CMockIgnoreArg_dataSize(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
